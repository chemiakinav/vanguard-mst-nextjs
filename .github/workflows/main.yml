# This is a basic workflow to help you get started with Actions

name: Release

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - env:
          # Credentials used to perform the release and commit the updated assets
          # to the repository.
          # Required: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Release or Beta release
        uses: ridedott/release-me-action@master
        with:
          # Configure Semantic Release branches parameter:
          # https://semantic-release.gitbook.io/semantic-release/usage/workflow-configuration#branches-properties
          #
          # If not specified, Semantic Release will use its default branches
          # configuration, specified in the API documentation:
          # https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#branches
          release-branches: '["main"]'
          # Commit the new line separated glob patterns to the repository as part
          # of the release process.
          #commit-assets: |
          #  ./
          # Run semantic release in dry-run mode.
          # Default: false
          dry-run: false
          # Bump the node module version and commit the changed package files to the
          # repository as part of the release process.
          # Default: false
          node-module: false
          # Attach the new line separated listed glob patterns to the release.
          #release-assets: |
          #  ./generated/my-asset.tar.gz
          # Configure the semantic release commit analyzer rules that are used to
          # determine the correct release version.
          # https://www.npmjs.com/package/@semantic-release/commit-analyzer#releaserules
          release-rules:
            '[{ "release": "patch", "type": "fix" }, { "release": "minor", "type":
            "feat" }, { "scope": "no-release", "release": false }]'
          # Loads a custom Semantic Release configuration from this file. See
          # https://semantic-release.gitbook.io/semantic-release/usage/configuration#configuration-file.
          # Provided configuration will be shallow merged with defaults. Supported
          # formats are YALM or CommonJS.
          config-file: ./package.json
          # Specify additional semantic-release plugins to install. Accepts packages
          # in typical package.json format.
          # additional-plugins:
           #  '{ "@google/semantic-release-replace-plugin": "1.0.2" }'
